@import 'tailwindcss';

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

input {
	outline: none;
}

:root {
	--primary-color: #ffccff;
	--secondary-color: #ccffcc;
	--transition-time: 0.1s;
}

main {
	background-image: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));
	font-family: monospace;
}

.absolute-center {
	left: 50%;
	position: absolute;
	top: 50%;
	transform: translate(-50%, -50%);
}

/* assumes you have absolute already */
.absolute-x-center {
	left: 50%;
	transform: translateX(-50%);
}

/* assumes you have absolute already */
.absolute-y-center {
	top: 50%;
	transform: translateY(-50%);
}

.button {
	background-color: white;
	border: 0.2rem solid black;
	border-radius: 0.5rem;
	cursor: pointer;
	font-weight: 600;
	padding: 0.1rem;
	padding-left: 0.4rem;
	padding-right: 0.4rem;
	transition: all;
	transition-duration: var(--transition-time);
}

.button:hover {
	background-color: var(--primary-color);
	rotate: 2deg;
	scale: 105%;
}

.button-border {
	border: 1px solid black;
	text-align: center;
	font-weight: bold;
	transition: transform;
	transition-duration: var(--transition-time);
	cursor: pointer;
}

.button-border:hover {
	transform: rotate(12deg) scale(105%);
}

.input {
	width: 8rem;
	border: 1px solid black;
	padding-left: 0.2rem;
	padding-right: 0.2rem;
}

.input:focus {
	border: 1px solid var(--secondary-color);
}

.invalid {
	border-color: red;
}

@keyframes animate-exit-button {
	0% {
		transform: translateX(5px);
	}

	50% {
		transform: scale(110%);
	}
}

.table tr:hover .remove-button {
	animation-name: animate-exit-button;
	animation-duration: 0.25s;
	animation-iteration-count: 1;
}

.table tr > *:not(:last-child) {
	border: 1px solid black;
	padding-left: 2px;
	padding-right: 2px;
	text-align: center;
}

.table tr > th:not(:last-child) {
	background-color: var(--primary-color);
}

.table tr td:nth-child(2) {
	text-align: right;
}

.table tr:has(td):not(:hover) {
	background-color: white;
}

.table tr:has(td:hover) > *:not(:last-child) {
	background-color: var(--secondary-color);
}

.table tr:has(td:hover) > *:not(:last-child):hover {
	background-color: black;
	color: white;
}

label:has(+ * .invalid),
label:has(+ .invalid) {
	color: red;
}
